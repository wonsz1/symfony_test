services:
  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - app_var:/var/www/html/var
      - app_vendor:/var/www/html/vendor
    depends_on:
      - php
    networks:
      - symfony_network

  php:
    build:
      context: ./docker/php
    container_name: symfony_php
    volumes:
      - ./:/var/www/html
    depends_on:
      - postgres
    networks:
      - symfony_network

  node10:
    image: node:18
    container_name: symfony_node10
    tty: true
    working_dir: /home/node
    volumes:
      - ./my-admin:/home/node
    ports:
      - "5173:5173"
    networks:
      - symfony_network

  postgres:
    image: postgres:14-alpine
    container_name: symfony_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: symfony_blog
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony
    volumes:
      - symfony_postgres_data:/var/lib/postgresql/data
    networks:
      - symfony_network

  redis:
    image: redis:8-alpine
    restart: always
    ports:
      - '6379:6379'
    # not for production
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - symfony_network

  adminer:
    image: adminer
    container_name: symfony_adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - symfony_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus # Persistent storage for Prometheus data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090" # Prometheus UI
    networks:
      - symfony_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin # CHANGE THIS IN PRODUCTION!
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning # For provisioning datasources/dashboards
      - grafana_data:/var/lib/grafana # Persistent storage for Grafana data
    ports:
      - "3000:3000" # Grafana UI
    depends_on:
      - prometheus # Ensure Prometheus is up before Grafana
    networks:
      - symfony_network


volumes:
  symfony_postgres_data:
  app_var:
  app_vendor:
  prometheus_data:
  grafana_data:
  cache:
    driver: local

networks:
  symfony_network:
    driver: bridge